import { jsPDF } from 'jspdf';
import html2canvas from 'html2canvas';

export const generateRoadmapPDF = async (roadmap, selections, getLabel) => {
  // Create a temporary div to hold the PDF content
  const tempDiv = document.createElement('div');
  tempDiv.style.position = 'absolute';
  tempDiv.style.left = '-9999px';
  tempDiv.style.width = '800px';
  tempDiv.style.padding = '40px';
  tempDiv.style.background = 'white';
  tempDiv.style.color = 'black';
  tempDiv.style.fontFamily = 'Arial, sans-serif';
  
  tempDiv.innerHTML = `
    <div id="pdf-content" style="max-width: 720px; margin: 0 auto;">
      <!-- Header -->
      <div style="text-align: center; margin-bottom: 30px; padding: 20px; background: linear-gradient(135deg, #6c8cff, #15d19a); color: white; border-radius: 10px;">
        <h1 style="margin: 0; font-size: 28px;">CodeCraf Learning Roadmap</h1>
        <p style="margin: 10px 0 0; opacity: 0.9;">Personalized Learning Path</p>
      </div>

      <!-- Learner Profile -->
      <div style="margin-bottom: 30px; padding: 20px; border: 2px solid #6c8cff; border-radius: 10px;">
        <h2 style="color: #6c8cff; margin: 0 0 15px 0;">Learner Profile</h2>
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px;">
          <div>
            <strong>Level:</strong> ${getLabel('level', selections.level)}
          </div>
          <div>
            <strong>Field:</strong> ${getLabel('field', selections.field)}
          </div>
          <div>
            <strong>Role:</strong> ${getLabel('role', selections.role)}
          </div>
          <div>
            <strong>Language:</strong> ${getLabel('language', selections.language)}
          </div>
        </div>
      </div>

      <!-- Roadmap Overview -->
      <div style="margin-bottom: 30px; padding: 20px; background: #f8f9fa; border-radius: 10px;">
        <h2 style="color: #15d19a; margin: 0 0 15px 0;">Roadmap Overview</h2>
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px;">
          <div><strong>Total Duration:</strong> ${roadmap.totalDuration}</div>
          <div><strong>Weekly Commitment:</strong> ${roadmap.weeklyHours}</div>
          <div><strong>Start Date:</strong> ${new Date().toLocaleDateString()}</div>
          <div><strong>Generated On:</strong> ${new Date().toLocaleDateString()}</div>
        </div>
      </div>

      <!-- Phases -->
      <div>
        <h2 style="color: #6c8cff; text-align: center; margin-bottom: 30px;">Learning Phases</h2>
        ${roadmap.phases.map((phase, phaseIndex) => `
          <div style="margin-bottom: 40px; page-break-inside: avoid;">
            <div style="background: linear-gradient(135deg, #6c8cff, #849dff); color: white; padding: 15px; border-radius: 8px; margin-bottom: 20px;">
              <h3 style="margin: 0; font-size: 18px;">Phase ${phaseIndex + 1}: ${phase.phase}</h3>
              <p style="margin: 5px 0 0; opacity: 0.9;">Duration: ${phase.duration}</p>
            </div>

            ${phase.weeks.map((week, weekIndex) => `
              <div style="margin-bottom: 25px; padding: 15px; border: 1px solid #e0e0e0; border-radius: 8px;">
                <h4 style="color: #15d19a; margin: 0 0 15px 0; font-size: 16px;">${week.week}</h4>
                
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;">
                  <!-- Topics -->
                  <div>
                    <h5 style="color: #6c8cff; margin: 0 0 10px 0; font-size: 14px;">üìö Topics</h5>
                    <ul style="margin: 0; padding-left: 20px; font-size: 12px;">
                      ${week.topics.map(topic => `<li>${topic}</li>`).join('')}
                    </ul>
                  </div>

                  <!-- Resources -->
                  <div>
                    <h5 style="color: #6c8cff; margin: 0 0 10px 0; font-size: 14px;">üîó Resources</h5>
                    <ul style="margin: 0; padding-left: 20px; font-size: 12px;">
                      ${week.resources.map(resource => `<li>${resource}</li>`).join('')}
                    </ul>
                  </div>

                  <!-- Projects -->
                  <div>
                    <h5 style="color: #6c8cff; margin: 0 0 10px 0; font-size: 14px;">üõ†Ô∏è Projects</h5>
                    <ul style="margin: 0; padding-left: 20px; font-size: 12px;">
                      ${week.projects.map(project => `<li>${project}</li>`).join('')}
                    </ul>
                  </div>
                </div>
              </div>
            `).join('')}
          </div>
        `).join('')}
      </div>

      <!-- Footer -->
      <div style="margin-top: 40px; padding: 20px; text-align: center; border-top: 2px solid #6c8cff;">
        <p style="color: #666; margin: 0;">
          Generated by CodeCraf ‚Ä¢ ${new Date().toLocaleDateString()} ‚Ä¢ Happy Learning! üöÄ
        </p>
      </div>
    </div>
  `;

  document.body.appendChild(tempDiv);

  try {
    const canvas = await html2canvas(tempDiv, {
      scale: 2,
      useCORS: true,
      allowTaint: true,
      backgroundColor: '#ffffff'
    });

    const imgData = canvas.toDataURL('image/png');
    const pdf = new jsPDF('p', 'mm', 'a4');
    const imgWidth = 210; // A4 width in mm
    const imgHeight = (canvas.height * imgWidth) / canvas.width;

    pdf.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);
    
    // Add page breaks for longer content
    let heightLeft = imgHeight;
    let position = 0;
    
    while (heightLeft > 0) {
      position = heightLeft - imgHeight;
      pdf.addPage();
      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
      heightLeft -= imgHeight;
    }

    pdf.save(`codecraf-roadmap-${selections.field}-${selections.role}.pdf`);
    
  } catch (error) {
    console.error('Error generating PDF:', error);
    alert('Error generating PDF. Please try again.');
  } finally {
    document.body.removeChild(tempDiv);
  }
};